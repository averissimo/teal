% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blueprint.R
\name{blueprint-products_map}
\alias{blueprint-products_map}
\title{Products Map}
\description{
\if{html}{\out{<div class="sourceCode">}}\preformatted{\{r products_map_mermaid1, echo=FALSE\}
DiagrammeR::mermaid("
\%\%| fig-height: 6
flowchart RL
teal
subgraph features
  direction LR
  teal.data
  teal.slice
  teal.transform
  teal.code
  teal.logger
  teal.widgets
end
subgraph modules
  direction RL
  teal.modules.general
  teal.modules.clinical
  teal.osprey
  teal.goshawk
  teal.modules.hermes
end
teal--has-->features
features--builds-->modules
modules--creates-->teal
subgraph modules
  teal.modules.general
  teal.modules.clinical
  teal.osprey
  teal.goshawk
  teal.modules.hermes
end
subgraph calculations
  direction RL
  tern
  osprey
  goshawk
  hermes
end
tern--supports-->teal.modules.clinical
osprey--supports-->teal.osprey
goshawk--supports-->teal.goshawk
hermes--supports-->teal.modules.hermes
style teal fill:lightblue
style features fill:lightgreen
style modules fill:pink
")
}\if{html}{\out{</div>}}

\code{teal} is a modular framework that relies on a suite of related R packages, as illustrated in the above diagram, to provide a wide range of functionalities.

\code{teal}'s primary function is to create web app for analysing clinical trial data, but it \strong{has} a multitude of features distributed across various R packages.

Developers can selectively leverage these R packages, such as \code{teal.widgets}, \code{teal.code}, and \code{teal.logger}, to \strong{build} \code{teal} modules for a \code{teal} app. This approach gives the developers the tools that speed up their work and avoid re-implementing existing logic and UI elements.

The \code{teal} modules utilize various R packages such as \code{tern}, \code{osprey}, and \code{goshawk} to perform calculations and analyses.
These R packages provide \strong{support} to the \code{teal} modules by performing all computations while the modules only have to focus on how to wrap the input options and the output.

Once developed, new and existing modules can be integrated into \code{teal} to \strong{create} a functional \code{teal} app.
\subsection{Why so many R packages?}{

By breaking down \code{teal} features, modules, and calculations into dedicated R packages, maintenance is made significantly more manageable.

Additionally, this separation allows for a clear distinction between the various roles and actors involved in the development of \code{teal}.

To learn different roles/actors in \code{teal} development, visit \href{actors.qmd}{Actors}.
}
}
\keyword{internal}
