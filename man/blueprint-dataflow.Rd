% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blueprint.R
\name{blueprint-dataflow}
\alias{blueprint-dataflow}
\title{Dataflow}
\description{
\if{html}{\out{<div class="sourceCode">}}\preformatted{\{r dataflow_mermaid1, echo=FALSE\}
DiagrammeR::mermaid("
\%\%| fig-width: 7.5
graph
    autonumber
    participant data
    participant filters
    participant filtered data
    participant teal module
    data->filters: gets
    filters->>filtered data: becomes
    filtered data->>teal module: sent to
")
}\if{html}{\out{</div>}}

The sequence diagram above illustrates the different stages that data goes through within the \code{teal} framework, supported by the \code{teal.slice} R package:
\enumerate{
\item Users \emph{(or app developers)} select which filters to apply;
\itemize{
\item See the \href{filterpanel.qmd}{Filter panel vignette} for details;
}
\item The R code is automatically generated from the selected filters;
\itemize{
\item Creates a \href{qenv.qmd}{\code{qenv}} R object that contains the code that will be applied to the data \emph{(and used for reproducibility)};
}
\item Apply the filters to the data \emph{(creating a filtered data instance)};
\itemize{
\item A module can have a custom set of filters that is only applied to it;
}
\item The filtered data is sent to the \code{teal} modules as the main data source for analysis.
}

Whenever filters are added or removed, these stages are restarted, providing the \code{teal} module with new filtered data to conduct the required analysis.
}
\keyword{internal}
